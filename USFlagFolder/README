Sophia Vera
#Flag Problem
##APCS Period 4, 2017

	This is the US flag Project. Its purpose it to create a scalable version of the United States flag. This means that it needed multiple components: the classes for drawing the figures on the flag and one for changing the size of the flag. I achieved this by first creating a scalable JApplet, called AmericanFlag, that would modify the proper dimensions of the flag when the flag size was changed. It would then feed those new values into a class called Flag, which would further distribute them to more specialized classes. Because of this, I only had to distribute a couple variables through classes, which I believe kept my code shorter and more concise.
	Inside of Flag, there exists an object of Stars and an object of Stripes. Flag itself could be combined with AmericanFlag, as Flag doesn't do any computation; however, this would result in an extremely large class that would really serve two separate purposes: changing the applets dimensions and creating and modifying the flag components. I felt that dividing this among two classes would make my code more comprehensible.
	As stated before, Flag contains smaller classes, which are Stars and Stripes. Each of these contains subclasses called Star and Stripes. These subclasses are responsible for drawing an individual star or stripe, whereas Stars and Stripes draw the set. This is all for the purpose of encapsulation. The subclasses are also mainly responsible for doing to mathematics needed to derive the correct points of a component based on the width and height of the entire flag.
	This project does achieve a working United States flag in java. It can be scaled according to the size of the JApplet it's contained in. The project doesn't achieve a couple things. Obviously, it is not infinitely scalable: at a small size, the flag, especially the stars, becomes visibly distorted due to the small amount of pixels. Another important thing to note is that speed can be a factor in the flag's appearance. If the flag is scaled too quickly, it can become mismatched with the size of the JApplet. However, this is not due to the flag's code, rather the paint method in the Container class is too slow to catch up to the user's movements. Besides from this, the USFlag in java creates a well functioning, scalable flag. 
